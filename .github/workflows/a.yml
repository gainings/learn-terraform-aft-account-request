name: Create Release PR

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write  # PR 作成権限を明示的に設定

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # すべてのタグを取得

      - name: 最新のタグを取得
        id: get-latest-tag
        run: |
          LATEST_TAG=$(git tag --list --sort=-v:refname '20[0-9][0-9].[0-9][0-9].[0-9][0-9]*' | head -n 1)
          echo "latest_tag=${LATEST_TAG}" >> $GITHUB_ENV

      - name: 新しいタグを決定
        id: determine-new-tag
        run: |
          TODAY=$(date -u +"%Y.%m.%d")
          TAG_BASE="$TODAY"

          COUNT=$(git tag --list "${TAG_BASE}*" | wc -l)
          if [ "$COUNT" -gt 0 ]; then
            NEW_TAG="${TAG_BASE}-$COUNT"
          else
            NEW_TAG="${TAG_BASE}"
          fi

          echo "new_tag=${NEW_TAG}" >> $GITHUB_ENV
          echo "New tag will be: ${NEW_TAG}"
      - name: 更新差分を取得
        id: get-diff
        run: |
          if [ -n "${{ env.latest_tag }}" ]; then
            git log --pretty=format:"- %h %s" ${{ env.latest_tag }}..HEAD > changes.txt
          else
            git log --pretty=format:"- %h %s" HEAD > changes.txt
          fi

          echo "commit_log=$(cat changes.txt | sed ':a;N;$!ba;s/\n/%0A/g')" >> $GITHUB_ENV

      - name: リリース用ブランチの作成または更新
        run: |
          git fetch origin ${{ env.release_branch }} || true

          if [ "${{ env.existing_pr_found }}" == "true" ]; then
            echo "既存のリリース PR が見つかりました。更新します。"
            git checkout ${{ env.release_branch }}
            git merge --no-edit main
          else
            echo "新しいリリース PR を作成します。"
            git checkout -b ${{ env.release_branch }}
          fi

          echo "${{ env.new_tag }}" > versionfile
          echo "# Release ${{ env.new_tag }}" > RELEASE.md
          echo "## Changes since last release:" >> RELEASE.md
          cat changes.txt >> RELEASE.md

          git add versionfile RELEASE.md
          git commit -m "Prepare release ${{ env.new_tag }}" || true
          git push -f origin ${{ env.release_branch }}

      - name: GitHub Pull Request を作成または更新
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ env.existing_pr_found }}" == "true" ]; then
            echo "既存の PR を更新しました。"
          else
            echo "新しいリリース PR を作成します。"
            gh pr create \
              --base main \
              --head "${{ env.release_branch }}" \
              --title "Release ${{ env.new_tag }}" \
              --body "### 🆕 Release \`${{ env.new_tag }}\`

            #### 🔄 Changes since last release:
            ${{ env.commit_log }}

            Once merged, the actual release will be created automatically. 🚀"
          fi
